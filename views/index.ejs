<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DateApp</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Lato', sans-serif;
        }
    </style>
    <style>
        @keyframes typing {
            from { width: 0 }
            to { width: 100% }
        }
        @keyframes blink-caret {
            from, to { border-color: transparent }
            50% { border-color: orange }
        }
        .typing {
            overflow: hidden;
            border-right: .15em solid orange;
            white-space: nowrap;
            margin: 0 auto;
            letter-spacing: .15em;
            animation: typing 3.5s steps(40, end), blink-caret .75s step-end infinite;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .fade-in {
            animation: fadeIn 2s ease-in-out;
        }
        @keyframes flip {
            from { transform: perspective(400px) rotateX(90deg); opacity: 0; }
            to { transform: perspective(400px) rotateX(0deg); opacity: 1; }
        }
        .flip {
            animation: flip 1s ease-in-out;
        }
        .glass {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 10px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        #calculateBtn:hover {
            transform: scale(1.05);
            transition: transform 0.2s ease-in-out;
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">

    <div class="container mx-auto p-8 border-2 border-gray-300 rounded-lg">
        <h1 id="main-heading" class="text-4xl font-bold text-center mb-2">Your Date Calculator</h1>
        <p id="sub-heading" class="text-lg text-center text-gray-600 mb-8">Days Left in the Year</p>

        <div class="max-w-md mx-auto p-6 glass">
            <div class="flex items-center space-x-4">
                <input type="date" id="dateInput" class="block w-full px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-md focus:border-blue-500 focus:outline-none focus:ring">
                <button id="calculateBtn" class="px-6 py-2 text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-4 focus:ring-blue-300">Calculate</button>
            </div>
            <div id="result" class="text-center mt-6 text-2xl font-semibold"></div>
        </div>

        <div id="leapYearMessage" class="max-w-md mx-auto p-4 my-4 text-center bg-yellow-200 text-yellow-800 rounded-lg shadow-md hidden">
            Hurray!! It's a leap year! You will get one day extra in this year
        </div>

        <div class="max-w-2xl mx-auto mt-12 border-2 border-gray-300 rounded-lg p-6">
            <h2 class="text-2xl font-bold text-center mb-4">Today's Progress in the Year</h2>
            <div class="w-full bg-gray-200 rounded-full h-6">
                <div id="progressBar" class="bg-green-500 h-6 text-xs font-medium text-blue-100 text-center p-1 leading-none rounded-full" style="width: 0%"></div>
            </div>
            <div class="text-center mt-2 text-sm text-gray-600" id="progressText"></div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const calculateBtn = document.getElementById('calculateBtn');
            const dateInput = document.getElementById('dateInput');
            const resultDiv = document.getElementById('result');
            const progressBar = document.getElementById('progressBar');
            const progressText = document.getElementById('progressText');
            const progressTitle = document.querySelector('h2');
            const leapYearMessage = document.getElementById('leapYearMessage');

            function updateProgressBar(dateString) {
                const date = new Date(dateString + 'T00:00:00Z');
                const year = date.getUTCFullYear();
                const isLeapYear = (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
                const totalDaysInYear = isLeapYear ? 366 : 365;
                const startOfYear = new Date(Date.UTC(year, 0, 1));
                const daysPassed = (date - startOfYear) / (1000 * 60 * 60 * 24) + 1;
                const progressPercentage = (daysPassed / totalDaysInYear) * 100;
                progressBar.style.width = `${progressPercentage.toFixed(2)}%`;
                progressBar.textContent = `${progressPercentage.toFixed(2)}%`;
                progressText.textContent = `Day ${Math.floor(daysPassed)} of ${totalDaysInYear}`;
            }

            function updateLeapYearMessage(dateString) {
                const date = new Date(dateString + 'T00:00:00Z');
                const year = date.getUTCFullYear();
                const isLeap = (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
                if (isLeap) {
                    leapYearMessage.classList.remove('hidden');
                } else {
                    leapYearMessage.classList.add('hidden');
                }
            }

            // Set default date to today and update progress bar
            const today = new Date();
            const year = today.getFullYear();
            const month = String(today.getMonth() + 1).padStart(2, '0');
            const day = String(today.getDate()).padStart(2, '0');
            const todayString = `${year}-${month}-${day}`;
            dateInput.value = todayString;
            updateProgressBar(todayString);
            updateLeapYearMessage(todayString);

            // Automatically perform calculation for today's date on page load
            fetch(`/api/days?date=${todayString}`)
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        resultDiv.textContent = data.error;
                    } else {
                        resultDiv.textContent = `${data.daysLeft} days left in the year.`;
                    }
                });

            calculateBtn.addEventListener('click', () => {
                const date = dateInput.value;
                if (date) {
                    fetch(`/api/days?date=${date}`)
                        .then(response => response.json())
                        .then(data => {
                            if (data.error) {
                                resultDiv.textContent = data.error;
                            } else {
                                resultDiv.textContent = `${data.daysLeft} days left in the year.`;
                                updateProgressBar(date);
                                updateLeapYearMessage(date);
                                progressTitle.textContent = `Progress in ${new Date(date + 'T00:00:00Z').getUTCFullYear()}`;
                            }
                        });
                }
            });
        });
    </script>

</body>
</html>
